// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OuterrimAirship.Model;

#nullable disable

namespace OuterrimAirship.Migrations
{
    [DbContext(typeof(SpacecraftContext))]
    [Migration("20250219142601_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("OuterrimAirship.Model.Compartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CompartmentId");

                    b.Property<int>("SpacecraftId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SpacecraftId");

                    b.HasKey("Id");

                    b.HasIndex("SpacecraftId");

                    b.ToTable("Compartments");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Crew", b =>
                {
                    b.Property<int>("MercenaryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MercenaryId");

                    b.Property<int>("SpacecraftId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SpacecraftId");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("JoinedAt");

                    b.HasKey("MercenaryId", "SpacecraftId");

                    b.HasIndex("SpacecraftId");

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("OuterrimAirship.Model.CrimeSyndicate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("CrimeSyndicates");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Machinery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("MachineryId");

                    b.Property<int>("CompartmentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CompartmentId");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Function");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Label");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompartmentId");

                    b.ToTable("Machineries");

                    b.HasDiscriminator<string>("Type").HasValue("Machinery");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OuterrimAirship.Model.Mercenary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("BodySkills")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BodySkills");

                    b.Property<int>("CombatSkills")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CombatSkills");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("LastName");

                    b.HasKey("Id");

                    b.ToTable("Mercenaries");
                });

            modelBuilder.Entity("OuterrimAirship.Model.MercenaryReputation", b =>
                {
                    b.Property<int>("CrimeSyndicateId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CrimeSyndicateId");

                    b.Property<int>("MercenaryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MercenaryId");

                    b.Property<string>("ReputationChange")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ReputationChange");

                    b.HasKey("CrimeSyndicateId", "MercenaryId");

                    b.HasIndex("MercenaryId");

                    b.ToTable("MercenaryReputations");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Spacecraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("Altitude")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Altitude");

                    b.Property<int>("Fuel")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Fuel");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Name");

                    b.Property<int>("SpacecraftSpecificationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SpacecraftSpecificationId");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Speed");

                    b.HasKey("Id");

                    b.HasIndex("SpacecraftSpecificationId");

                    b.ToTable("Spacecrafts");
                });

            modelBuilder.Entity("OuterrimAirship.Model.SpacecraftSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("FuelTankCapacity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("FuelTankCapacity");

                    b.Property<int>("MaxAltitude")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MaxAltitude");

                    b.Property<int>("MaxSpeed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MaxSpeed");

                    b.Property<int>("MinSpeed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MinSpeed");

                    b.Property<string>("SpecificationCode")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("SpecificationCode");

                    b.Property<int>("Structure")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Structure");

                    b.HasKey("Id");

                    b.ToTable("SpacecraftSpecifications");
                });

            modelBuilder.Entity("OuterrimAirship.Model.EnergySystem", b =>
                {
                    b.HasBaseType("OuterrimAirship.Model.Machinery");

                    b.ToTable("Machineries");

                    b.HasDiscriminator().HasValue("EnergySystem");
                });

            modelBuilder.Entity("OuterrimAirship.Model.EnvironmentalSystem", b =>
                {
                    b.HasBaseType("OuterrimAirship.Model.Machinery");

                    b.ToTable("Machineries");

                    b.HasDiscriminator().HasValue("EnvironmentalSystem");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Weapon", b =>
                {
                    b.HasBaseType("OuterrimAirship.Model.Machinery");

                    b.ToTable("Machineries");

                    b.HasDiscriminator().HasValue("Weapon");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Compartment", b =>
                {
                    b.HasOne("OuterrimAirship.Model.Spacecraft", "Spacecraft")
                        .WithMany("Compartments")
                        .HasForeignKey("SpacecraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spacecraft");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Crew", b =>
                {
                    b.HasOne("OuterrimAirship.Model.Mercenary", "Mercenary")
                        .WithMany("Crews")
                        .HasForeignKey("MercenaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OuterrimAirship.Model.Spacecraft", "Spacecraft")
                        .WithMany("Crews")
                        .HasForeignKey("SpacecraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mercenary");

                    b.Navigation("Spacecraft");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Machinery", b =>
                {
                    b.HasOne("OuterrimAirship.Model.Compartment", "Compartments")
                        .WithMany("Machineries")
                        .HasForeignKey("CompartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compartments");
                });

            modelBuilder.Entity("OuterrimAirship.Model.MercenaryReputation", b =>
                {
                    b.HasOne("OuterrimAirship.Model.CrimeSyndicate", "CrimeSyndicate")
                        .WithMany("MercenaryReputations")
                        .HasForeignKey("CrimeSyndicateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OuterrimAirship.Model.Mercenary", "Mercenary")
                        .WithMany("MercenaryReputations")
                        .HasForeignKey("MercenaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CrimeSyndicate");

                    b.Navigation("Mercenary");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Spacecraft", b =>
                {
                    b.HasOne("OuterrimAirship.Model.SpacecraftSpecification", "SpacecraftSpecification")
                        .WithMany("Spacecrafts")
                        .HasForeignKey("SpacecraftSpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpacecraftSpecification");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Compartment", b =>
                {
                    b.Navigation("Machineries");
                });

            modelBuilder.Entity("OuterrimAirship.Model.CrimeSyndicate", b =>
                {
                    b.Navigation("MercenaryReputations");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Mercenary", b =>
                {
                    b.Navigation("Crews");

                    b.Navigation("MercenaryReputations");
                });

            modelBuilder.Entity("OuterrimAirship.Model.Spacecraft", b =>
                {
                    b.Navigation("Compartments");

                    b.Navigation("Crews");
                });

            modelBuilder.Entity("OuterrimAirship.Model.SpacecraftSpecification", b =>
                {
                    b.Navigation("Spacecrafts");
                });
#pragma warning restore 612, 618
        }
    }
}
