<MudDialog>
    <DialogContent>
        @if (Mercenary != null)
        {
            <MudForm Model="Mercenary" @bind-IsValid="@_success" @bind-Errors="@_errors">
                <MudTextField T="string" @bind-Value="@Mercenary.FirstName"
                              Label="Firstname" Required="true" RequiredError="Firstname is required!" />
                <MudTextField T="string" @bind-Value="@Mercenary.LastName"
                              Label="Lastname" Required="true" RequiredError="Lastname is required!"/>
                <MudNumericField T="int" @bind-Value="@Mercenary.BodySkills"
                                 Label="Body Skills"/>
                <MudNumericField T="int" @bind-Value="@Mercenary.CombatSkills"
                                 Label="Combat Skills"/>
            </MudForm>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" 
                   Disabled="@(!_success)" Class="ml-auto"
                   OnClick="EditMercenary">@Type</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance? MudDialog { get; set; }

    [Parameter]
    public Mercenary? Mercenary { get; set; }
    
    [Parameter]
    public string? Type { get; set; }

    private void Cancel() => MudDialog?.Cancel();
    
    bool _success;
    string[] _errors = [];

    private async Task EditMercenary()
    {
        if (Type == "Create")
        {
            if (Mercenary != null) await MercenaryRepositoryAsync.CreateAsync(Mercenary);
            Snackbar.Add("Mercenary created!", Severity.Success);
            MudDialog?.Close(DialogResult.Ok(true));
        }
        else
        {
            if (Mercenary != null) await MercenaryRepositoryAsync.UpdateAsync(Mercenary);
            Snackbar.Add("Mercenary edited!", Severity.Success);
            MudDialog?.Close(DialogResult.Ok(true));
        }
    }
}